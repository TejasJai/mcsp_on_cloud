apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/config: 492a6adabb741e0cee39be9aa5155c41a4456629f862d0006a2d892dbecfbcae
    cni.projectcalico.org/containerID: 9921c350e235f261db5cbb712c2e344c5e298665b7b6ac68245c42202b4f9f10
    cni.projectcalico.org/podIP: 172.21.164.146/32
    cni.projectcalico.org/podIPs: 172.21.164.146/32
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "k8s-pod-network",
          "ips": [
              "172.21.164.146"
          ],
          "default": true,
          "dns": {}
      }]
    openshift.io/scc: restricted-v2
    prometheus.io/path: /metrics
    prometheus.io/port: "9101"
    prometheus.io/scrape: "true"
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2024-06-11T15:31:35Z"
  generateName: argocd-redis-ha-haproxy-97974f87-
  labels:
    app.kubernetes.io/name: argocd-redis-ha-haproxy
    bcdr-candidate: t
    by-squad: mcsp-argocd
    component-name: argocd-resource
    for-product: all
    pod-template-hash: 97974f87
  name: argocd-redis-ha-haproxy-97974f87-8l86c
  namespace: argocd-manager
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: argocd-redis-ha-haproxy-97974f87
    uid: d2e4144c-6e29-40b3-82b6-29325c1647fb
  resourceVersion: "128119287"
  uid: 090b214c-96d7-465a-9169-d8552c849f66
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: argocd-redis-ha-haproxy
        topologyKey: kubernetes.io/hostname
  containers:
  - image: icr.io/automation-saas-platform/cicd/haproxy:2.9.6-alpine
    imagePullPolicy: IfNotPresent
    lifecycle: {}
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8888
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 3
      successThreshold: 1
      timeoutSeconds: 1
    name: haproxy
    ports:
    - containerPort: 6379
      name: redis
      protocol: TCP
    - containerPort: 9101
      name: metrics-port
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8888
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 3
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: 100m
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 128Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /usr/local/etc/haproxy
      name: data
    - mountPath: /run/haproxy
      name: shared-socket
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-tm6sc
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: argocd-icr-ips
  initContainers:
  - args:
    - /readonly/haproxy_init.sh
    command:
    - sh
    image: icr.io/automation-saas-platform/cicd/haproxy:2.9.6-alpine
    imagePullPolicy: IfNotPresent
    name: config-init
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /readonly
      name: config-volume
      readOnly: true
    - mountPath: /data
      name: data
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-tm6sc
      readOnly: true
  nodeName: 192.168.194.18
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000650000
    seLinuxOptions:
      level: s0:c26,c0
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: argocd-redis-ha-haproxy
  serviceAccountName: argocd-redis-ha-haproxy
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: argocd-redis-ha-configmap
    name: config-volume
  - emptyDir: {}
    name: shared-socket
  - emptyDir: {}
    name: data
  - name: kube-api-access-tm6sc
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T15:31:38Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T15:31:43Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T15:31:43Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T15:31:35Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://2147dd735bff80122419dfd0484eeccf72cfa6b3b13be6e6fd6134efd38f1d10
    image: icr.io/automation-saas-platform/cicd/haproxy:2.9.6-alpine
    imageID: icr.io/automation-saas-platform/cicd/haproxy@sha256:7b7c189985556efec6b3fa39007d8a42ca541a2cf6d9524b0d67762bc4641bea
    lastState: {}
    name: haproxy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T15:31:38Z"
  hostIP: 192.168.194.18
  initContainerStatuses:
  - containerID: cri-o://9f6520c66b6c61af3e6d75f76b104627f7e9b252b16d88afa8a450f22fb276c8
    image: icr.io/automation-saas-platform/cicd/haproxy:2.9.6-alpine
    imageID: icr.io/automation-saas-platform/cicd/haproxy@sha256:7b7c189985556efec6b3fa39007d8a42ca541a2cf6d9524b0d67762bc4641bea
    lastState: {}
    name: config-init
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: cri-o://9f6520c66b6c61af3e6d75f76b104627f7e9b252b16d88afa8a450f22fb276c8
        exitCode: 0
        finishedAt: "2024-06-11T15:31:37Z"
        reason: Completed
        startedAt: "2024-06-11T15:31:37Z"
  phase: Running
  podIP: 172.21.164.146
  podIPs:
  - ip: 172.21.164.146
  qosClass: Burstable
  startTime: "2024-06-11T15:31:34Z"
