apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: 886dcde24304ecf41d8090a15f21da895f0c6f69c10040e94ec4b6cd85a298f6
    cni.projectcalico.org/podIP: 172.21.211.12/32
    cni.projectcalico.org/podIPs: 172.21.211.12/32
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "k8s-pod-network",
          "ips": [
              "172.21.211.12"
          ],
          "default": true,
          "dns": {}
      }]
    openshift.io/scc: restricted-v2
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2024-06-11T17:18:03Z"
  generateName: argocd-repo-server-6f947f4699-
  labels:
    app.kubernetes.io/name: argocd-repo-server
    bcdr-candidate: t
    by-squad: mcsp-argocd
    component-name: argocd-resource
    for-product: all
    pod-template-hash: 6f947f4699
  name: argocd-repo-server-6f947f4699-2knds
  namespace: argocd-manager
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: argocd-repo-server-6f947f4699
    uid: 9dca0240-783a-439c-8b72-197be014b863
  resourceVersion: "128290770"
  uid: 659f09be-5167-4f2a-ac08-14d65edb107c
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: argocd-repo-server
          topologyKey: topology.kubernetes.io/zone
        weight: 100
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: argocd-repo-server
        topologyKey: kubernetes.io/hostname
  automountServiceAccountToken: true
  containers:
  - args:
    - /usr/local/bin/argocd-repo-server
    command:
    - entrypoint.sh
    - argocd-repo-server
    - --redis
    - argocd-redis-ha-haproxy:6379
    - --parallelismlimit=10
    env:
    - name: ARGOCD_RECONCILIATION_TIMEOUT
      valueFrom:
        configMapKeyRef:
          key: timeout.reconciliation
          name: argocd-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_LOGFORMAT
      valueFrom:
        configMapKeyRef:
          key: reposerver.log.format
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_LOGLEVEL
      valueFrom:
        configMapKeyRef:
          key: reposerver.log.level
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_PARALLELISM_LIMIT
      valueFrom:
        configMapKeyRef:
          key: reposerver.parallelism.limit
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_LISTEN_ADDRESS
      valueFrom:
        configMapKeyRef:
          key: reposerver.listen.address
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS
      valueFrom:
        configMapKeyRef:
          key: reposerver.metrics.listen.address
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_DISABLE_TLS
      valueFrom:
        configMapKeyRef:
          key: reposerver.disable.tls
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_TLS_MIN_VERSION
      valueFrom:
        configMapKeyRef:
          key: reposerver.tls.minversion
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_TLS_MAX_VERSION
      valueFrom:
        configMapKeyRef:
          key: reposerver.tls.maxversion
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_TLS_CIPHERS
      valueFrom:
        configMapKeyRef:
          key: reposerver.tls.ciphers
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_CACHE_EXPIRATION
      valueFrom:
        configMapKeyRef:
          key: reposerver.repo.cache.expiration
          name: argocd-cmd-params-cm
          optional: true
    - name: REDIS_SERVER
      valueFrom:
        configMapKeyRef:
          key: redis.server
          name: argocd-cmd-params-cm
          optional: true
    - name: REDIS_COMPRESSION
      valueFrom:
        configMapKeyRef:
          key: redis.compression
          name: argocd-cmd-params-cm
          optional: true
    - name: REDISDB
      valueFrom:
        configMapKeyRef:
          key: redis.db
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
      valueFrom:
        configMapKeyRef:
          key: reposerver.default.cache.expiration
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_OTLP_ADDRESS
      valueFrom:
        configMapKeyRef:
          key: otlp.address
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_OTLP_INSECURE
      valueFrom:
        configMapKeyRef:
          key: otlp.insecure
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_OTLP_HEADERS
      valueFrom:
        configMapKeyRef:
          key: otlp.headers
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE
      valueFrom:
        configMapKeyRef:
          key: reposerver.max.combined.directory.manifests.size
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS
      valueFrom:
        configMapKeyRef:
          key: reposerver.plugin.tar.exclusions
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS
      valueFrom:
        configMapKeyRef:
          key: reposerver.allow.oob.symlinks
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE
      valueFrom:
        configMapKeyRef:
          key: reposerver.streamed.manifest.max.tar.size
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE
      valueFrom:
        configMapKeyRef:
          key: reposerver.streamed.manifest.max.extracted.size
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE
      valueFrom:
        configMapKeyRef:
          key: reposerver.helm.manifest.max.extracted.size
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE
      valueFrom:
        configMapKeyRef:
          key: reposerver.disable.helm.manifest.max.extracted.size
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_GIT_MODULES_ENABLED
      valueFrom:
        configMapKeyRef:
          key: reposerver.enable.git.submodule
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT
      valueFrom:
        configMapKeyRef:
          key: reposerver.git.lsremote.parallelism.limit
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_GIT_REQUEST_TIMEOUT
      valueFrom:
        configMapKeyRef:
          key: reposerver.git.request.timeout
          name: argocd-cmd-params-cm
          optional: true
    - name: HELM_CACHE_HOME
      value: /helm-working-dir
    - name: HELM_CONFIG_HOME
      value: /helm-working-dir
    - name: HELM_DATA_HOME
      value: /helm-working-dir
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: Always
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz?full=true
        port: 8084
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 5
    name: argocd-repo-server
    ports:
    - containerPort: 8081
      protocol: TCP
    - containerPort: 8084
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8084
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 150m
        memory: 256Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /app/config/ssh
      name: ssh-known-hosts
    - mountPath: /app/config/tls
      name: tls-certs
    - mountPath: /app/config/gpg/source
      name: gpg-keys
    - mountPath: /app/config/gpg/keys
      name: gpg-keyring
    - mountPath: /app/config/reposerver/tls
      name: argocd-repo-server-tls
    - mountPath: /tmp
      name: tmp
    - mountPath: /helm-working-dir
      name: helm-working-dir
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /var/run/argocd/argocd-cmp-server
    envFrom:
    - secretRef:
        name: argocd-vault-configuration
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: argocd-vault-plugin
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      name: cmp-plugin
      subPath: argocd-vault-plugin.yaml
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /var/run/argocd/argocd-cmp-server
    envFrom:
    - secretRef:
        name: argocd-vault-configuration
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: argocd-vault-plugin-custom
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      name: cmp-plugin
      subPath: argocd-vault-plugin-custom.yaml
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /var/run/argocd/argocd-cmp-server
    env:
    - name: HELM_CACHE_HOME
      value: /helm-temp-dir
    - name: HELM_CONFIG_HOME
      value: /helm-temp-dir
    - name: HELM_DATA_HOME
      value: /helm-temp-dir
    envFrom:
    - secretRef:
        name: argocd-vault-configuration
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: argocd-vault-plugin-helm
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    - mountPath: /helm-temp-dir
      name: helm-temp-dir
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      name: cmp-plugin
      subPath: argocd-vault-plugin-helm.yaml
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /var/run/argocd/argocd-cmp-server
    env:
    - name: HELM_CACHE_HOME
      value: /helm-temp-dir
    - name: HELM_CONFIG_HOME
      value: /helm-temp-dir
    - name: HELM_DATA_HOME
      value: /helm-temp-dir
    envFrom:
    - secretRef:
        name: argocd-vault-configuration
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: argocd-vault-plugin-helm-custom
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    - mountPath: /helm-temp-dir
      name: helm-temp-dir
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      name: cmp-plugin
      subPath: argocd-vault-plugin-helm-custom.yaml
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /var/run/argocd/argocd-cmp-server
    envFrom:
    - secretRef:
        name: argocd-vault-configuration
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: argocd-vault-plugin-kustomize
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      name: cmp-plugin
      subPath: argocd-vault-plugin-kustomize.yaml
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /var/run/argocd/argocd-cmp-server
    envFrom:
    - secretRef:
        name: argocd-vault-configuration
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: argocd-vault-plugin-kustomize-custom
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      name: cmp-plugin
      subPath: argocd-vault-plugin-kustomize-custom.yaml
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /var/run/argocd/argocd-cmp-server
    env:
    - name: HELM_CACHE_HOME
      value: /helm-temp-dir
    - name: HELM_CONFIG_HOME
      value: /helm-temp-dir
    - name: HELM_DATA_HOME
      value: /helm-temp-dir
    envFrom:
    - secretRef:
        name: argocd-vault-configuration
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: argocd-vault-plugin-helm-kustomize
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    - mountPath: /helm-temp-dir
      name: helm-temp-dir
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      name: cmp-plugin
      subPath: argocd-vault-plugin-helm-kustomize.yaml
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /var/run/argocd/argocd-cmp-server
    envFrom:
    - secretRef:
        name: argocd-vault-configuration
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: argocd-manager-worker-deployment
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      name: cmp-plugin
      subPath: argocd-manager-worker-deployment.yaml
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /var/run/argocd/argocd-cmp-server
    envFrom:
    - secretRef:
        name: argocd-vault-configuration
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: argocd-vault-plugin-helm-inline
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      name: cmp-plugin
      subPath: argocd-vault-plugin-helm-inline.yaml
    - mountPath: /usr/local/bin/argocd-vault-plugin
      name: custom-tools
      subPath: argocd-vault-plugin
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: argocd-icr-ips
  initContainers:
  - args:
    - wget -O /custom-tools/argocd-vault-plugin https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v1.17.0/argocd-vault-plugin_1.17.0_linux_amd64
      && chmod +x /custom-tools/argocd-vault-plugin
    command:
    - sh
    - -c
    env:
    - name: AVP_VERSION
      value: 1.17.0
    image: icr.io/automation-saas-platform/cicd/alpine:3.19.1
    imagePullPolicy: Always
    name: download-tools
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000650000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /custom-tools
      name: custom-tools
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  - command:
    - /bin/cp
    - -n
    - /usr/local/bin/argocd
    - /var/run/argocd/argocd-cmp-server
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: IfNotPresent
    name: copyutil
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000650000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6w8ts
      readOnly: true
  nodeName: 192.168.192.19
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000650000
    seLinuxOptions:
      level: s0:c26,c0
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: argocd-sa
  serviceAccountName: argocd-sa
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: cmp-plugin
    name: cmp-plugin
  - emptyDir: {}
    name: custom-tools
  - emptyDir: {}
    name: helm-temp-dir
  - configMap:
      defaultMode: 420
      name: argocd-ssh-known-hosts-cm
    name: ssh-known-hosts
  - configMap:
      defaultMode: 420
      name: argocd-tls-certs-cm
    name: tls-certs
  - configMap:
      defaultMode: 420
      name: argocd-gpg-keys-cm
    name: gpg-keys
  - emptyDir: {}
    name: gpg-keyring
  - emptyDir: {}
    name: tmp
  - emptyDir: {}
    name: helm-working-dir
  - name: argocd-repo-server-tls
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: tls.crt
      - key: tls.key
        path: tls.key
      - key: ca.crt
        path: ca.crt
      optional: true
      secretName: argocd-repo-server-tls
  - emptyDir: {}
    name: var-files
  - emptyDir: {}
    name: plugins
  - name: kube-api-access-6w8ts
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T17:18:48Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T17:19:03Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T17:19:03Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T17:18:03Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://1e0bcc9f81d5b14a09ca83168ef33e11193e9762ed0ab4337656a8adfcdcbeb3
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-manager-worker-deployment
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:50Z"
  - containerID: cri-o://6ff1b6d81bea5d8a418042e1fc685a4917da46257f6157e275eb78df8c03774f
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-repo-server
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:49Z"
  - containerID: cri-o://ad7fd73d5c1b2668839d7cd1247e75cc147c20bf7548c866a0c32939639fed7b
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-vault-plugin
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:49Z"
  - containerID: cri-o://b4485102e917fe5dd9811a8d02d682568e3a178fe32dee4f0f7330a17f600838
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-vault-plugin-custom
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:49Z"
  - containerID: cri-o://e6bed74fe392dd51ff8790948577b7a53103195cdc14955a71079e11a4c270ba
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-vault-plugin-helm
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:49Z"
  - containerID: cri-o://22c187d97dc4d5f82dd8a251473a2ef0430b97bcc61c8f449db856684a45b060
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-vault-plugin-helm-custom
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:49Z"
  - containerID: cri-o://dbfab473f5dcfb250821721b117de4bcec1d83e2970f3c6869f83d7ba6abbde3
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-vault-plugin-helm-inline
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:50Z"
  - containerID: cri-o://4d5c9639fa778db8cd33145fee200e7fc0302ec0e9b31b36369c621fc28b97e7
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-vault-plugin-helm-kustomize
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:50Z"
  - containerID: cri-o://c5a22bc040d8cfae637f8e21883cb901d917614e20e79e573864e2579d6c6c21
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-vault-plugin-kustomize
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:50Z"
  - containerID: cri-o://96f186394e1284df2935aaae822ddc2066822cb905b73732de5f0b90d299ad6d
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-vault-plugin-kustomize-custom
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T17:18:50Z"
  hostIP: 192.168.192.19
  initContainerStatuses:
  - containerID: cri-o://962ff0ec6a674742f0220068c44da809ba959227ac637c385df2e2e733dc1376
    image: icr.io/automation-saas-platform/cicd/alpine:3.19.1
    imageID: icr.io/automation-saas-platform/cicd/alpine@sha256:a6bb8cb8c3f68e1c4f9e1e6c1b0d0e924d6f939c344411f0d01926d8b9113276
    lastState: {}
    name: download-tools
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: cri-o://962ff0ec6a674742f0220068c44da809ba959227ac637c385df2e2e733dc1376
        exitCode: 0
        finishedAt: "2024-06-11T17:18:23Z"
        reason: Completed
        startedAt: "2024-06-11T17:18:23Z"
  - containerID: cri-o://661d5a5dc7140ce09d6a92816c2a1b87cb827cace7cc302a89bec6a0520c07a4
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: copyutil
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: cri-o://661d5a5dc7140ce09d6a92816c2a1b87cb827cace7cc302a89bec6a0520c07a4
        exitCode: 0
        finishedAt: "2024-06-11T17:18:47Z"
        reason: Completed
        startedAt: "2024-06-11T17:18:47Z"
  phase: Running
  podIP: 172.21.211.12
  podIPs:
  - ip: 172.21.211.12
  qosClass: Burstable
  startTime: "2024-06-11T17:18:02Z"
